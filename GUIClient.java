import java.util.List;

/**
 *
 * @author Jin
 */
public class GUIClient extends javax.swing.JFrame {
    StringBuffer GSOutput = new StringBuffer();
    StringBuffer FSOutput = new StringBuffer();
    GroupClient groupClient = new GroupClient();
	FileClient fileClient = new FileClient();
	UserToken token = null;
	boolean FSConnected = false;
	boolean GSConnected = false;
	String userT = "";
    
    /** Creates new form GUIClient */
    public GUIClient() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        GSTA = new javax.swing.JTextArea();
        GSSubmit = new javax.swing.JButton();
        GSCommand = new javax.swing.JComboBox();
        FSCommand = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        GSConnect = new javax.swing.JButton();
        GSDisconnect = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        GSPort = new javax.swing.JTextField();
        FSConnect = new javax.swing.JButton();
        FSPort = new javax.swing.JTextField();
        FSDIsconnect = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        GSUsernameFT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        FSTA = new javax.swing.JTextArea();
        FSSubmit = new javax.swing.JButton();
        GSGroupNameFT = new javax.swing.JTextField();
        FSSourceFileTF = new javax.swing.JTextField();
        FSDestFileFT = new javax.swing.JTextField();
        FSGroupNameFT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test");

        GSTA.setColumns(20);
        GSTA.setEditable(false);
        GSTA.setRows(5);
        jScrollPane1.setViewportView(GSTA);

        GSSubmit.setText("Submit");
        GSSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSSubmitActionPerformed(evt);
            }
        });

        GSCommand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Create User", "Delete User", "Create Group", "Delete Group", "Add User to Group", "Delete User from Group", "List Group Members" }));
        GSCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSCommandActionPerformed(evt);
            }
        });

        FSCommand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "List Files", "Upload", "Download", "Delete", " " }));
        FSCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSCommandActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Group Server Command");

        jLabel2.setText("Select File Server Command");

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        jLabel3.setText("Username:");

        GSConnect.setText("Connect");
        GSConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSConnectActionPerformed(evt);
            }
        });

        GSDisconnect.setText("Disconnect");
        GSDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSDisconnectActionPerformed(evt);
            }
        });

        jLabel5.setText("Port:");

        GSPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSPortActionPerformed(evt);
            }
        });

        FSConnect.setText("Connect");
        FSConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSConnectActionPerformed(evt);
            }
        });

        FSPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSPortActionPerformed(evt);
            }
        });

        FSDIsconnect.setText("Disconnect");
        FSDIsconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSDIsconnectActionPerformed(evt);
            }
        });

        jLabel8.setText("Port:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Connect to Group Server");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Connect to  File Server");

        GSUsernameFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSUsernameFTActionPerformed(evt);
            }
        });

        FSTA.setColumns(20);
        FSTA.setEditable(false);
        FSTA.setRows(5);
        jScrollPane2.setViewportView(FSTA);

        FSSubmit.setText("Submit");
        FSSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSSubmitActionPerformed(evt);
            }
        });

        GSGroupNameFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GSGroupNameFTActionPerformed(evt);
            }
        });

        FSSourceFileTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSSourceFileTFActionPerformed(evt);
            }
        });

        FSDestFileFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSDestFileFTActionPerformed(evt);
            }
        });

        FSGroupNameFT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSGroupNameFTActionPerformed(evt);
            }
        });

        jLabel4.setText("Source Filename");

        jLabel6.setText("Destinatoin Filename");

        jLabel7.setText("Group Name");

        jLabel11.setText("Username");

        jLabel12.setText("Group Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FSPort, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FSConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FSDIsconnect))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GSPort, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GSConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GSDisconnect)))
                .addGap(199, 199, 199))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(GSCommand, 0, 148, Short.MAX_VALUE)
                                        .addGap(9, 9, 9))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GSSubmit)
                                .addGap(62, 62, 62))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(GSGroupNameFT, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(GSUsernameFT, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                                .addGap(46, 46, 46)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(FSCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FSSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(FSGroupNameFT)
                                    .addComponent(FSDestFileFT)
                                    .addComponent(FSSourceFileTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2))))
                .addGap(56, 56, 56))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FSCommand, GSCommand});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GSDisconnect)
                    .addComponent(GSConnect)
                    .addComponent(GSPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FSDIsconnect)
                    .addComponent(FSConnect)
                    .addComponent(FSPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(GSSubmit)
                            .addGap(9, 9, 9))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FSCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(GSCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(FSSubmit)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(GSUsernameFT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GSGroupNameFT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FSSourceFileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FSDestFileFT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FSGroupNameFT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>

	private void GSSubmitActionPerformed(java.awt.event.ActionEvent evt) {
	    String user = GSUsernameFT.getText();
		String group = GSGroupNameFT.getText();
		String output = "\n";
		if(!GSConnected){
			output += "Group Server not connected";
		}
		else{
			switch(GSCommand.getSelectedIndex()){
			case 0:{
				if(groupClient.createUser(user, token)){
					output += "User created successfully!";
				}
				else{
					output += "User create failed!";
				}
			}break;
			case 1:{
				if(groupClient.deleteUser(user, token)){
					output += "User deleted successfully!";
				}
				else{
					output += "User delete failed!";
				}
			}break;
			case 2:{
				if(groupClient.createGroup(group, token)){
					output += "Group created successfully!";
				}
				else{
					output += "Group create failed!";
				}
			}break;
			case 3:{
				if(groupClient.deleteGroup(group, token)){
					output += "Group deleted successfully!";
				}
				else{
					output += "Group delete failed!";
				}
			}break;
			case 4:{
				if(groupClient.addUserToGroup(user, group, token)){
					output += "Added user to group successfully!";
				}
				else{
					output += "Add user to group failed!";
				}
			}break;
			case 5:{
				if(groupClient.deleteUserFromGroup(user, group, token)){
					output += "Deleted user from group successfully!";
				}
				else{
					output += "Delete user from group failed!";
				}
			}break;
			case 6:{
				List<String> result = groupClient.listMembers(group, token);
				if(result != null){
					output += "Group size: " + result.size() + "\nGroup Members:";
					for(String temp : result){
						output += "\n" + temp;
					}
				}
				else{
					output += "no such group!";
				}
			}break;
			}
		}
		token = groupClient.getToken(userT);
	    GSOutput.append(output);
	    GSTA.setText(GSOutput.toString());
	}
	
	private void usernameActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	    
	}
	
	private void FSSubmitActionPerformed(java.awt.event.ActionEvent evt) {
		String source = FSSourceFileTF.getText();
		String destination = FSDestFileFT.getText();
		String group = FSGroupNameFT.getText();
		String output = "\n";
		if(!FSConnected){
			output += "File Server is not connected!";
		}
		else{
			switch(FSCommand.getSelectedIndex()){
			case 0:{
				List<String> result = fileClient.listFiles(token);
				if(result != null){
					output += "Total file: " + result.size() + "\nFile List:";
					for(String temp : result){
						output += "\n" + temp;
					}
				}
				else{
					output += "error list file";
				}
			}break;
			case 1:{
				if(fileClient.upload(source, destination, group, token)){
					output += "File uploaded successfully!";
				}
				else{
					output += "File upload failed!";
				}
			}break;
			case 2:{
				if(fileClient.download(source, destination, token)){
					output += "File downloaded successfully!";
				}
				else{
					output += "File download failed!";
				}
			}break;
			case 3:{
				if(fileClient.delete(source, token)){
					output += "File deleted successfully!";
				}
				else{
					output += "File delete failed!";
				}
			}break;
			}
		}
		token = groupClient.getToken(userT);
	    FSOutput.append(output);
	    FSTA.setText(FSOutput.toString());
	}
	
	private void GSCommandActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void GSPortActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void GSConnectActionPerformed(java.awt.event.ActionEvent evt) {
		String output = "\n";
		if(GSConnected){
			output += "Group Server already connected";
		}
		else{
			int port = Integer.parseInt(GSPort.getText());
			userT = username.getText();
			groupClient.connect("localhost", port);
			token = groupClient.getToken(userT);
			if(token == null){
				output += "not a valid user\nGroup Server Connect Failed!";
				groupClient.disconnect();
			}
			else{
				output += "Group Server Connect Successfull";
				GSConnected = true;
			}
		}
		GSOutput.append(output);
	    GSTA.setText(GSOutput.toString());
	}
	
	private void GSDisconnectActionPerformed(java.awt.event.ActionEvent evt) {
		String output = "\n";
		if(GSConnected){
			groupClient.disconnect();
			GSConnected = false;
			output += "Group Server disconnect!";
		}
		else{
			output += "Error - Group Server not Connected!";
		}
		GSOutput.append(output);
	    GSTA.setText(GSOutput.toString());
	}
	
	private void FSPortActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void FSConnectActionPerformed(java.awt.event.ActionEvent evt) {
		String output = "\n";
		if(FSConnected){
			output += "File Server already connected";
		}
		else{
			int port = Integer.parseInt(FSPort.getText());
			fileClient.connect("localhost", port);
			if(token == null){
				output += "Connection Failed - must connect to Group Server First";
				fileClient.disconnect();
			}
			else{
				output += "File Server Connect Successfull";
				FSConnected = true;
			}
		}
		FSOutput.append(output);
	    FSTA.setText(FSOutput.toString());
	}
	
	private void FSDIsconnectActionPerformed(java.awt.event.ActionEvent evt) {
		String output = "\n";
		if(FSConnected){
			fileClient.disconnect();
			FSConnected = false;
			output += "File Server disconnect!";
		}
		else{
			output += "Error - File Server not Connected!";
		}
		FSOutput.append(output);
	    FSTA.setText(FSOutput.toString());
	}
	
	private void FSCommandActionPerformed(java.awt.event.ActionEvent evt) {
		
	}
	
	private void GSUsernameFTActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void GSGroupNameFTActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void FSSourceFileTFActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void FSDestFileFTActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}
	
	private void FSGroupNameFTActionPerformed(java.awt.event.ActionEvent evt) {
	// TODO add your handling code here:
	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {       
        
            public void run() {
                new GUIClient().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JComboBox FSCommand;
    private javax.swing.JButton FSConnect;
    private javax.swing.JButton FSDIsconnect;
    private javax.swing.JTextField FSDestFileFT;
    private javax.swing.JTextField FSGroupNameFT;
    private javax.swing.JTextField FSPort;
    private javax.swing.JTextField FSSourceFileTF;
    private javax.swing.JButton FSSubmit;
    private javax.swing.JTextArea FSTA;
    private javax.swing.JComboBox GSCommand;
    private javax.swing.JButton GSConnect;
    private javax.swing.JButton GSDisconnect;
    private javax.swing.JTextField GSGroupNameFT;
    private javax.swing.JTextField GSPort;
    private javax.swing.JButton GSSubmit;
    private javax.swing.JTextArea GSTA;
    private javax.swing.JTextField GSUsernameFT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField username;
    // End of variables declaration
}